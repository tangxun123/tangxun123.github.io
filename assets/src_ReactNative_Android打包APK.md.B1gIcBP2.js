import{_ as i,c as a,o as e,ag as n}from"./chunks/framework.DPDPlp3K.js";const g=JSON.parse('{"title":"React Native Android 打包APK","description":"","frontmatter":{"highlight":"a11y-dark"},"headers":[],"relativePath":"src/ReactNative/Android打包APK.md","filePath":"src/ReactNative/Android打包APK.md","lastUpdated":1742193340000}'),l={name:"src/ReactNative/Android打包APK.md"};function t(p,s,h,k,d,r){return e(),a("div",null,s[0]||(s[0]=[n(`<h1 id="react-native-android-打包apk" tabindex="-1">React Native Android 打包APK <a class="header-anchor" href="#react-native-android-打包apk" aria-label="Permalink to &quot;React Native Android 打包APK&quot;">​</a></h1><h4 id="生产签名密匙" tabindex="-1">生产签名密匙 <a class="header-anchor" href="#生产签名密匙" aria-label="Permalink to &quot;生产签名密匙&quot;">​</a></h4><blockquote><p>你可以用keytool命令生成一个私有密钥。 也可以终端执行。</p></blockquote><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">keytool </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">genkeypair </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">v </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">keystore my</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">release</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">key.keystore </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">alias my</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">key</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">alias </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">keyalg </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">RSA</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> -</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">keysize </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2048</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> -</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">validity </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10000</span></span></code></pre></div><p>这条命令会要求你输入密钥库<code>（keystore）</code>和对应密钥的密码，然后设置一些发行相关的信息。最后它会在<code>android/app</code>目录下生成一个叫做<code>my-release-key.keystore</code>的密钥库文件。</p><p>在运行上面这条语句之后，密钥库里应该已经生成了一个单独的密钥，有效期为 10000 天。--alias 参数后面的别名是你将来为应用签名时所需要用到的，所以记得记录这个别名。</p><h4 id="设置-gradle-变量" tabindex="-1">设置 gradle 变量 <a class="header-anchor" href="#设置-gradle-变量" aria-label="Permalink to &quot;设置 gradle 变量&quot;">​</a></h4><ol><li>把<code>my-release-key.keystore</code>文件放到你工程中的<code>android/app</code>文件夹下（默认）。</li><li>编辑<code>~/.gradle/gradle.properties</code>（全局配置，对所有项目有效）或是项目目录/android/gradle.properties（项目配置，只对所在项目有效）。如果没有<code>gradle.properties</code>文件你就自己创建一个，添加如下的代码（注意把其中的****替换为相应密匙的密码）</li></ol><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">MYAPP_RELEASE_STORE_FILE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">my</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">release</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">key.keystore</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">MYAPP_RELEASE_KEY_ALIAS</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">my</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">key</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">alias</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">MYAPP_RELEASE_STORE_PASSWORD</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=*****</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">MYAPP_RELEASE_KEY_PASSWORD</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=*****</span></span></code></pre></div><h4 id="把签名配置加入到项目的-gradle-配置中" tabindex="-1">把签名配置加入到项目的 gradle 配置中 <a class="header-anchor" href="#把签名配置加入到项目的-gradle-配置中" aria-label="Permalink to &quot;把签名配置加入到项目的 gradle 配置中&quot;">​</a></h4><blockquote><p>编辑你项目目录下的 <code>android/app/build.gradle</code>，添加如下的签名配置：</p></blockquote><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">android {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    ...</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    defaultConfig { </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    signingConfigs {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        release {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">            if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (project.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">hasProperty</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;MYAPP_RELEASE_STORE_FILE&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                storeFile </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">file</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">MYAPP_RELEASE_STORE_FILE</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                storePassword </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">MYAPP_RELEASE_STORE_PASSWORD</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                keyAlias </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">MYAPP_RELEASE_KEY_ALIAS</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                keyPassword </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">MYAPP_RELEASE_KEY_PASSWORD</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    buildTypes {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        release {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">            ...</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            signingConfig signingConfigs.release </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 打release包，而不是debug</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span></span></code></pre></div><h4 id="针对不同的-cpu-架构生成-apk-以减小-apk-文件的大小" tabindex="-1">针对不同的 CPU 架构生成 APK 以减小 APK 文件的大小 <a class="header-anchor" href="#针对不同的-cpu-架构生成-apk-以减小-apk-文件的大小" aria-label="Permalink to &quot;针对不同的 CPU 架构生成 APK 以减小 APK 文件的大小&quot;">​</a></h4><ol><li>可以在 <code>android/app/build.gradle</code> 中修改如下代码（false 改为 true）来生成多个针对不同 CPU 架构的 APK。</li></ol><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// def enableSeparateBuildPerCPUArchitecture = false</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">def enableSeparateBuildPerCPUArchitecture </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> true</span></span></code></pre></div><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// universalApk false</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">universalApk </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // 额外生成一个适用不同CPU架构的通用APK</span></span></code></pre></div><ol start="2"><li><code>android/gradle.properties</code> 打开第13行注释，用于 调整内存设置 不至于内存溢出。</li></ol><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">org.gradle.jvmargs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Xmx2048m </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">XX</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:MaxPermSize</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">512m </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">XX</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">HeapDumpOnOutOfMemoryError </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Dfile.encoding</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">UTF</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">8</span></span></code></pre></div><h4 id="生成发行-apk-包" tabindex="-1">生成发行 APK 包 <a class="header-anchor" href="#生成发行-apk-包" aria-label="Permalink to &quot;生成发行 APK 包&quot;">​</a></h4><p>终端执行以下命令</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">cd android </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 进入 android 目录</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">gradlew assembleRelease</span></span></code></pre></div><blockquote><p>在 macOS、Linux 或是 windows 的 PowerShell 环境中表示执行当前目录下的名为 gradlew 的脚本文件，且其运行参数为 assembleRelease，注意这个./不可省略；而在 windows 的传统 CMD 命令行下则需要去掉 <code>./</code>。</p></blockquote><p>生成的 APK 文件位于<code>android/app/build/outputs/apk/release/app-release.apk</code>，它已经可以用来发布了。</p><p><a href="https://reactnative.cn/docs/signed-apk-android" target="_blank" rel="noreferrer">官方原文</a></p>`,24)]))}const o=i(l,[["render",t]]);export{g as __pageData,o as default};
